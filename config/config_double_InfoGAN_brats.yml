model : 'double_infogan'
dataset : 'brats_t1'

n_epoch : 2000

batch_size : 32

latent_distribution : 'normal' # choices : normal & uniform

seed : "None"

#img_size : 64  # size of each image dimension
in_channels : 1 # number of image channels
dec_channels : 32

salient_latent_size : 15 #3
background_latent_size : 95 #32

cr : 
   #use_cr : True
   model : DCGAN_2
   channels : [64, 128, 256, 512,512]
   std : 0.1
   gap : 0.0

# discriminator : 
#     model : 'DCGAN'
#     std: 0.2
    
# generator : 
#     model : 'DCGAN'
#     act_fn : 'tanh'

discriminator : 
    model : 'DCGAN_double'
    channels : [64, 128, 256, 512,512]
    std: 0.2

generator : 
    model : 'DCGAN_Up'
    channels :  [512,1024,512, 256, 256, 128,128, 64]
    upsample :  [True, True, True,True,False, True, False,True]
    attention : {8: False, 16: False, 32: True, 64: False, 128: False, 256: False, 512: False}
    init_ch : 4   #multiplier for first linear layer : linear(inut_dim,channels[0]*init_ch**2), followed by reshape (bs, channels[0],init_ch,init_ch)
    act_fn : 'tanh'



lr_g : 0.0001  # adam : learning rate for generator
lr_d : 0.0001  # adam : learning rate for discriminator
lr_cr : 0.0001  # adam : learning rate for CR net

loop_g : 1  # Generator steps
loop_d : 1  # Discriminator steps
loop_cr : 1  # CR steps

infoloss : 'l1' # choices : l1 ou gauss

## Loss weights
w_bg : 0.5  #Weights for X and Y (to start training with X only for instance) 
w_t : 1.0
wadv : 0.5 # Loss weight for adversarial gan loss
wi_z : 1.0  # Loss weight for info (z reconstruction)
wi_s : 1.0  # Loss weight for info (s reconstruction)
wc : 0.5    # Loss weight for class loss
wii : 1.0   # Loss weight for image reconstruction loss
wcr : 1.0
wi_real_s : 1.0

save_img_epoch : 10
save_img_linspace_epoch : 10000000
save_ckpt : 50